groups:
  - root: a-project/
    destination: another-bucket
    directives: [resize_directives, compress_svg]
  - root: another-project/
    destination: another-bucket
    directives: [resize_directives, compress_svg]

# Store some vars
var:
  sizes: [1500, 1200, 900, 600, 400, 200]

#
# Directives
# The below are a set of directives that can be referenced by the `groups`
# object above. The each directive takes the following properties
# endpoint: the eventual s3 endpoint of the file
# matcher: matches a glob against the file in the original bucket
# command: command to be applied against the
# acl:
# variables:
#  - basename: the basename of the original file
#  - filename: the basename + extenion of the original file
#  - endpoint: the endpoint (see above)
#

# Break bitmaps into a bunch of different sizes
resize_native:
  - endpoint: '%{basename}/1000w.jpg'
    matcher: ['*.jpg', '*.png']
    command: convert %{filename} -quality 50 -interlace Plane -resize x1000> %{endpoint}
    acl: public-read
  - endpoint: '%{basename}/800w.jpg'
    matcher: ['*.jpg', '*.png']
    command: convert %{filename} -quality 50 -interlace Plane -resize x800> %{endpoint}
    acl: public-read
  - endpoint: '%{basename}/400w.jpg'
    matcher: ['*.jpg', '*.png']
    command: convert %{filename} -quality 50 -interlace Plane -resize x400> %{endpoint}
    acl: public-read
  - endpoint: '%{basename}/1000w.webp'
    matcher: ['*.jpg', '*.png']

# Convert bitmaps to webp in various sizes
resize_and_convert_to_webp:
    command: convert %{filename} -quality 50 -interlace Plane -define webp:lossless=true -resize x1000> %{endpoint}
    acl: public-read
  - endpoint: '%{basename}/800w.webp'
    matcher: ['*.jpg', '*.png']
    command: convert %{filename} -quality 50 -interlace Plane -define webp:lossless=true -resize x800> %{endpoint}
    acl: public-read
  - endpoint: '%{basename}/800w.webp'
    matcher: ['*.jpg', '*.png']
    command: convert %{filename} -quality 50 -interlace Plane -define webp:lossless=true -resize x800> %{endpoint}
    acl: public-read

compress_svg:
  - endpoint: '%{filename}'
    matcher: ['*.svg']
    command: svgo %{filename}
    acl: public-read

convert_gif_to_mp4:
  - endpoint: '%{basename}.gif'
    matcher: ['*.gif']
    acl: public-read
  - endpoint: '%{basename}.mp4'
    matcher: ['*.gif']
    command: ffmpeg -i %{filename} -pix_fmt yuv420p -vf crop=floor (in_w/2)*2:floor(in_h/2)*2 %{endpoint}
    acl: public-read
